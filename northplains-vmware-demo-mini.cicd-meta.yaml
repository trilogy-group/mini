navigator:
    name: Iunir Iakupov
    email: Iunir.iakupov@trilogy.com
companyName: Northplains
productName: vmware-demo
c4containerName: mini
repoUrl: https://github.com/trilogy-group/mini.test
githubTeamName: import-automation-reviewers
repoBranch: master
needsLowLevelHardwareAccess: false
needsDockerServer: false
type: Deployable service
buildAndDistribute:
    techStack: PHP
    os: Ubuntu 18.04
    toolchainVersion: php-7.2
    build:
        tool: ""
        preBuildCommand: apt-get install -y zip unzip
        buildCommand: bash ./_vagrant/bootstrap.sh
    test:
        utFramework: PHPUnit
        preTest: echo Skip
        testCommand: echo skip
        coverageReport:
            type: Cobertura
    package:
        tool: composer
        command: mkdir -p target && zip -r target/artifact.zip *
        artifactDir: ./target
    distribution:
        artifactUploadCommand: echo Skip
    requiresIntegrationTests: false
deployment:
    serviceName: mini-test
    overridableProps:
        guiType: Web
        stickySessions: false
        canUseLb: true
        fixedNetworkIdentifier: false
        provision:
            os: Ubuntu 18.04
            command: echo skip
        install:
            dockerized: false
            os: Ubuntu 18.04
            runtimeEnv: php-7.2
            installCommand: cp ./target/artifact.zip artifact.zip || true && apt-get
                install -y unzip && unzip -o artifact.zip && rm -rf artifact.zip &&
                composer install && bash ./_vagrant/bootstrap.sh
        run:
            os: Ubuntu 18.04
            mode: doNothing
            command: echo 1
            userName: root
        deploymentCheck:
            exec:
                command: check.sh
        integrationTest:
            preTestCommand: echo skip
            testCommand: echo skip
    targets:
      - name: Default
        qa:
            guiType: null
            install:
                dockerized: null
                installCommand: echo TODO
            deploymentCheck:
                exec:
                    command: echo TODO
        stage:
            guiType: null
            install:
                dockerized: null
                installCommand: echo TODO
            deploymentCheck:
                exec:
                    command: echo TODO
